@prefix : <urn:example:> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

:exp1 :value _:x0 .

_:x0 rdf:first 1 .
_:x0 rdf:rest _:x1 .

_:x1 rdf:first 2 .
_:x1 rdf:rest _:x2 .

_:x2 rdf:first 3 .
_:x2 rdf:rest rdf:nil .

{
    :exp1 :value ?x .
    ?x rdf:first 1 .
}
=>
{
    :test1 :is true .
} .

{
    :exp1 :value ?x .
    ?x log:rawType log:LabeledBlankNode . 
}
=>
{
    :test2 :is true .
} .

{
    :exp1 :value ?x .
    ?x log:equalTo (1 2 3) .  # debatable if this is true or not ...
}
=>
{
    :test3 :is true .
} .

{
    # This is true in cases where rdf:rest is a built-in on list-terms
    (1 2 3) rdf:rest (2 3) . # we want it to be false...
}
=> false .


{
    # Attention _:x0 is here scoped to the premise..
    # this should match the three rdf:rest predicates above
    _:x0 rdf:rest ?O .
}
=>
{
    :test4 :is ?O .

} .

{
    :test1 :is true .
    :test2 :is true .
    :test3 :is true .
    :test4 :is [ rdf:first 2 ; rdf:rest [ rdf:first 3 ; rdf:rest rdf:nil ] ] .
    :test4 :is [ rdf:first 3 ; rdf:rest rdf:nil ] .
    :test4 :is ()
}
=>
{
    :test :is true .
} .

