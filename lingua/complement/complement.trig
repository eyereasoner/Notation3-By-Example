@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix lingua: <http://www.w3.org/2000/10/swap/lingua#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix : <#>.

# Definition of complement

# With a triple with a predicate and the same triple with the complement(predicate)
# can't be true at the same time.
_:implication1
    lingua:premise _:pre1 ;
    lingua:conclusion false .

_:pre1 log:closedBy <> .

_:pre1 {
    var:X log:complement var:Y .
    var:Foo var:X var:Bar .
    var:Foo var:Y var:Bar .
}

# Complements should be symmetric 
## A complement B => B complement A
log:complement a owl:SymmetricProperty .

# Complement should be disjoint 
## A complement A => false
log:complement a owl:IrreflexiveProperty .

# A complement is unique
## A complement B & A complement C => B sameAs C
_:implication2
    lingua:premise _:pre2 ;
    lingua:conclusion _:con2 .

_:pre2 log:closedBy <> .
_:con2 log:closedBy <> .

_:pre2 {
    var:X log:complement var:A .
    var:X log:complement var:B .
    var:A log:notEqualTo var:B .
}

_:con2 {
    var:A owl:sameAs var:B .
}

# A complement's complement is sameAs A
_:implication3
    lingua:premise _:pre3 ;
    lingua:conclusion _:con3 .

_:pre3 log:closedBy <> .
_:con3 log:closedBy <> .

_:pre3 {
    var:X log:complement var:A .
    var:A log:complement var:B .
    var:X log:notEqualTo var:A .
    var:A log:notEqualTo var:B .
}

_:con3 {
    var:X owl:sameAs var:B .
}