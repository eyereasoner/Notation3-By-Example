@prefix util: <https://github.com/phochste/util#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix graph: <http://www.w3.org/2000/10/swap/graph#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix pol:  <https://www.example.org/ns/policy#> .

##################################################################

# (X G) util:cardinality N
#   X - a triple pattern
#   G - a formula
#   N - a numerable or variable
# Find the cardinality of a pattern X in G as number N
(?Pat ?Graph ?L ?N) log:onNegativeSurface {
    () log:onNegativeSurface <<(?Pat ?Graph) util:cardinality ?N>> .
    (?Pat ?L) util:collectAllIn ?Graph .
    ?L list:length ?N .
} .

##################################################################

# (X1 X2) util:collectAllIn G.
#   X1 - a triple pattern graph
#   X2 - a list variable
#   G - a formula
# Finds all occurenced of the triple X1 in G and creates
# a list X2 of result
(?Pat ?List ?Graph ?GraphL) log:onNegativeSurface {
    () log:onNegativeSurface <<(?Pat ?List) util:collectAllIn ?Graph>> .

    ?Graph graph:list ?GraphL .

    (?Pat ?List ()) util:_collectAllIn ?GraphL .
} .

(?Pat ?Result) log:onNegativeSurface {
    () log:onNegativeSurface <<(?Pat ?Result ?Result) util:_collectAllIn ()>> .
} .

(?Pat ?List ?Result ?GraphL ?F ?R ?ResultNext ?T1 ?T2 ?N) log:onNegativeSurface {
    () log:onNegativeSurface <<(?Pat ?List ?Result) util:_collectAllIn ?GraphL>> .

    ?GraphL list:firstRest (?F ?R) .

    ?F log:includesNotBind ?Pat .

    (?Result (?F) ) list:append ?ResultNext .

    (?Pat ?List ?ResultNext) util:_collectAllIn ?R .
} .

(?Pat ?List ?Result ?GraphL ?F ?R) log:onNegativeSurface {
    () log:onNegativeSurface <<(?Pat ?List ?Result) util:_collectAllIn ?GraphL>> .

    ?GraphL list:firstRest (?F ?R) .

    ?F log:notIncludes ?Pat .

    (?Pat ?List ?Result) util:_collectAllIn ?R .
} .

##################################################################

# X util:walkGraph << S P O >>
#    X - a resource
#    << S P O >> - a triple pattern
# Turn all triple patterns for the graph with subject X
(?subject ?S ?P ?O) log:onNegativeSurface {
    () log:onNegativeSurface <<?subject util:walkGraph << ?subject ?P ?O >>>> .
    ?subject ?P ?O .
} .

(?subject ?X ?Y ?S ?P ?O) log:onNegativeSurface {
    () log:onNegativeSurface <<?subject util:walkGraph << ?S ?P ?O >>>> .
    ?subject ?X ?Y .
    ?Y util:walkGraph << ?S ?P ?O >> .
} .

##################################################################

# X util:policyParam Y
#   X - a policy formula { Name pol:policy Data }
#   Y - a renamed policy formula { Skolem(Name) pol:policy Data }
(?A ?B ?X1 ?X2 ?X3 ?X4 ?X5 ?NewName) log:onNegativeSurface {
    () log:onNegativeSurface <<?A util:policyParam ?B>> .

    ?A log:includes {
        ?X1 pol:policy ?X2
    } .

    ?A graph:list ?X3 .

    ( ?X3 { ?X1 pol:policy ?X2 } ) list:remove ?X4 .

    ?X1 log:skolem ?NewName .

    ( ( { ?NewName pol:policy ?X2 } ) ?X4 ) list:append ?X5 .

    ?B graph:list ?X5 .
}.

##################################################################
