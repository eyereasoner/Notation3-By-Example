@prefix util: <https://github.com/phochste/util#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix graph: <http://www.w3.org/2000/10/swap/graph#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix pol:  <https://www.example.org/ns/policy#> .

##################################################################

# (X G) util:cardinality N
#   X - a triple pattern
#   G - a formula
#   N - a numerable or variable
# Find the cardinality of a pattern X in G as number N
(_Pat _Graph _L _N) log:onNegativeSurface {
    () log:onNegativeSurface <<(_Pat _Graph) util:cardinality _N>> .
    (_Pat _L) util:collectAllIn _Graph .
    _L list:length _N .
} .

##################################################################

# (X1 X2) util:collectAllIn G.
#   X1 - a triple pattern graph
#   X2 - a list variable
#   G - a formula
# Finds all occurenced of the triple X1 in G and creates
# a list X2 of result
(_Pat _List _Graph _GraphL) log:onNegativeSurface {
    () log:onNegativeSurface <<(_Pat _List) util:collectAllIn _Graph>> .

    _Graph graph:list _GraphL .

    (_Pat _List ()) util:_collectAllIn _GraphL .
} .

(_Pat _Result) log:onNegativeSurface {
    () log:onNegativeSurface <<(_Pat _Result _Result) util:_collectAllIn ()>> .
} .

(_Pat _List _Result _GraphL _F _R _ResultNext _T1 _T2 _N) log:onNegativeSurface {
    () log:onNegativeSurface <<(_Pat _List _Result) util:_collectAllIn _GraphL>> .

    _GraphL list:firstRest (_F _R) .

    _F log:includesNotBind _Pat .

    (_Result (_F) ) list:append _ResultNext .

    (_Pat _List _ResultNext) util:_collectAllIn _R .
} .

(_Pat _List _Result _GraphL _F _R) log:onNegativeSurface {
    () log:onNegativeSurface <<(_Pat _List _Result) util:_collectAllIn _GraphL>> .

    _GraphL list:firstRest (_F _R) .

    _F log:notIncludes _Pat .

    (_Pat _List _Result) util:_collectAllIn _R .
} .

##################################################################

# X util:walkGraph << S P O >>
#    X - a resource
#    << S P O >> - a triple pattern
# Turn all triple patterns for the graph with subject X
(_subject _S _P _O) log:onNegativeSurface {
    () log:onNegativeSurface <<_subject util:walkGraph << _subject _P _O >>>> .
    _subject _P _O .
} .

(_subject _X _Y _S _P _O) log:onNegativeSurface {
    () log:onNegativeSurface <<_subject util:walkGraph << _S _P _O >>>> .
    _subject _X _Y .
    _Y util:walkGraph << _S _P _O >> .
} .

##################################################################

# X util:policyParam Y
#   X - a policy formula { Name pol:policy Data }
#   Y - a renamed policy formula { Skolem(Name) pol:policy Data }
(_A _B _X1 _X2 _X3 _X4 _X5 _NewName) log:onNegativeSurface {
    () log:onNegativeSurface <<_A util:policyParam _B>> .

    _A log:includes {
        _X1 pol:policy _X2
    } .

    _A graph:list _X3 .

    ( _X3 { _X1 pol:policy _X2 } ) list:remove _X4 .

    _X1 log:skolem _NewName .

    ( ( { _NewName pol:policy _X2 } ) _X4 ) list:append _X5 .

    _B graph:list _X5 .
}.

##################################################################
