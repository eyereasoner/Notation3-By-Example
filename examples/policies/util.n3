@prefix util: <https://github.com/phochste/util#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix graph: <http://www.w3.org/2000/10/swap/graph#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix pol:  <https://www.example.org/ns/policy#> .

##################################################################

# (X G) util:cardinality N
#   X - a triple pattern
#   G - a formula
#   N - a numerable or variable
# Find the cardinality of a pattern X in G as number N
(skolem:Pat skolem:Graph skolem:L skolem:N) log:onNegativeSurface {
    () log:onNegativeSurface <<(skolem:Pat skolem:Graph) util:cardinality skolem:N>> .
    (skolem:Pat skolem:L) util:collectAllIn skolem:Graph .
    skolem:L list:length skolem:N .
} .

##################################################################

# (X1 X2) util:collectAllIn G.
#   X1 - a triple pattern graph
#   X2 - a list variable
#   G - a formula
# Finds all occurenced of the triple X1 in G and creates
# a list X2 of result
(skolem:Pat skolem:List skolem:Graph skolem:GraphL) log:onNegativeSurface {
    () log:onNegativeSurface <<(skolem:Pat skolem:List) util:collectAllIn skolem:Graph>> .

    skolem:Graph graph:list skolem:GraphL .

    (skolem:Pat skolem:List ()) util:_collectAllIn skolem:GraphL .
} .

(skolem:Pat skolem:Result) log:onNegativeSurface {
    () log:onNegativeSurface <<(skolem:Pat skolem:Result skolem:Result) util:_collectAllIn ()>> .
} .

(skolem:Pat skolem:List skolem:Result skolem:GraphL skolem:F skolem:R skolem:ResultNext skolem:T1 skolem:T2 skolem:N) log:onNegativeSurface {
    () log:onNegativeSurface <<(skolem:Pat skolem:List skolem:Result) util:_collectAllIn skolem:GraphL>> .

    skolem:GraphL list:firstRest (skolem:F skolem:R) .

    skolem:F log:includesNotBind skolem:Pat .

    (skolem:Result (skolem:F) ) list:append skolem:ResultNext .

    (skolem:Pat skolem:List skolem:ResultNext) util:_collectAllIn skolem:R .
} .

(skolem:Pat skolem:List skolem:Result skolem:GraphL skolem:F skolem:R) log:onNegativeSurface {
    () log:onNegativeSurface <<(skolem:Pat skolem:List skolem:Result) util:_collectAllIn skolem:GraphL>> .

    skolem:GraphL list:firstRest (skolem:F skolem:R) .

    skolem:F log:notIncludes skolem:Pat .

    (skolem:Pat skolem:List skolem:Result) util:_collectAllIn skolem:R .
} .

##################################################################

# X util:walkGraph << S P O >>
#    X - a resource
#    << S P O >> - a triple pattern
# Turn all triple patterns for the graph with subject X
(skolem:subject skolem:S skolem:P skolem:O) log:onNegativeSurface {
    () log:onNegativeSurface <<skolem:subject util:walkGraph << skolem:subject skolem:P skolem:O >>>> .
    skolem:subject skolem:P skolem:O .
} .

(skolem:subject skolem:X skolem:Y skolem:S skolem:P skolem:O) log:onNegativeSurface {
    () log:onNegativeSurface <<skolem:subject util:walkGraph << skolem:S skolem:P skolem:O >>>> .
    skolem:subject skolem:X skolem:Y .
    skolem:Y util:walkGraph << skolem:S skolem:P skolem:O >> .
} .

##################################################################

# X util:policyParam Y
#   X - a policy formula { Name pol:policy Data }
#   Y - a renamed policy formula { Skolem(Name) pol:policy Data }
(skolem:A skolem:B skolem:X1 skolem:X2 skolem:X3 skolem:X4 skolem:X5 skolem:NewName) log:onNegativeSurface {
    () log:onNegativeSurface <<skolem:A util:policyParam skolem:B>> .

    skolem:A log:includes {
        skolem:X1 pol:policy skolem:X2
    } .

    skolem:A graph:list skolem:X3 .

    ( skolem:X3 { skolem:X1 pol:policy skolem:X2 } ) list:remove skolem:X4 .

    skolem:X1 log:skolem skolem:NewName .

    ( ( { skolem:NewName pol:policy skolem:X2 } ) skolem:X4 ) list:append skolem:X5 .

    skolem:B graph:list skolem:X5 .
}.

##################################################################
