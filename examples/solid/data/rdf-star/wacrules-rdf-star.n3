@prefix : <https://example.org/ns/>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>. 
@prefix acl: <http://www.w3.org/ns/auth/acl#>.

# We want to give access
# to all triples
# that are part of a resource X 
# where X has acl:allow set for the WebID in our context

(
_:Resource 
_:MetaResource 
_:ACLResource
_:ACLEntry
_:S_R _:P_R _:O_R
_:S_M _:P_M _:O_M
_:WebID
) log:onNegativeSurface {
    _:Resource a :Resource.
    _:Resource :describedby _:MetaResource.
    _:Resource :acl _:ACLResource.

    # We want to return all triples from the resource 
    <<_:S_R _:P_R _:O_R>> :partOf _:Resource.

    # And all triples from the metadata resource
    <<_:S_M _:P_M _:O_M>> :partOf _:MetaResource.

    # If we are allowed by the ACL resource
    _:ACLEntry a acl:Authorization.
    _:ACLEntry acl:accessTo _:Resource.
    _:ACLEntry acl:mode acl:Read.
    _:ACLEntry acl:agent _:WebID.    

    # We take the agent WebID from the request context 
    :RequestContext acl:agent _:WebID.

    () log:onNegativeSurface {
        # We write the triples on a result surface
        () log:onResultSurface { 
           _:S_R _:P_R _:O_R.
        } .

        () log:onResultSurface { 
           _:S_M _:P_M _:O_M.
        } .
    } .
} .