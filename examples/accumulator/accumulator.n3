@prefix : <urn:example.org:> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

# Example how one could implement an accumulator in backward rules

:MyList :is (1 2 3 4).

{
    :MyList :is ?X .
    ?X :rev ?Y .
}
=>
{
    :result :is ?Y .
} .

{
    ?L :rev ?R .
}
<=
{
    (?L ()) :revAcc ?R .
} .

{
    (() ?R) :revAcc ?Ra .
}
<= 
{
    # Could have written 'true' here ..but this surpresses printing the backward rule on the output
    ?R log:equalTo ?Ra .
} .

{
    (?L ?Acc) :revAcc ?R .
}
<=
{
    ?L list:firstRest (?H ?T) .
    ( (?H) ?Acc) list:append ?AccNew .
    (?T ?AccNew) :revAcc ?R .
} .