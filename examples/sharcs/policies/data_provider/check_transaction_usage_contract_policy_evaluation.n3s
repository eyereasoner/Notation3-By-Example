@prefix : <http://www.example.org/rdf#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

# ForAll Session, Client, Membership , TransactionUsageContract:
# (<Login> a Login) &
# (<Login> client <Client>) &
# (<Login> membership <Membership>) &
# (<TransactionUsageContract> a TransactionUsageContract) &
# (<TransactionUsageContract> isActive true) & 
# (<TransactionUsageContract> hasMembership <Membership>) &
# (<TransactionUsageContract> hasClient <Client>)
# IMPLIES
#    (<Login> a ValidTransactionUsageContract) &
#    (<Login> contract <TransactionUsageContract>)
(_Login _Client _Membership _TransactionUsageContract) log:onNegativeSurface {
    _Login
         a :Login;
         :client _Client ;
         :membership _Membership .

    _TransactionUsageContract 
        a :TransactionUsageContract ;
        :isActive true ;
        :hasMembership _Membership ;
        :hasClient _Client .
        
    () log:onNegativeSurface {
        _Login
            a :ValidTransactionUsageContract ;
            :contract _TransactionUsageContract .
    } .
} .

# ForAll Login, Contract, User, Membership, Permission, Allows
# (<Login> a Login) &
# (<Login> user <User>) &
# (<Login> membership <Membership>) &
# (<Login> contract <Contract>) &
# (<Permission> a Permission) &
# (<Permission> isActive true) &
# (<Permission> hasMembership <Membership>) &
# (<Permission> allows <Allows>) &
# (<Allows> contract <Contract>) &
# (<Allows> subscriber <User>)
# IMPLIES
#   (<Login> a ValidPermission)
(_Login _Contract _User _Membership _Permission _Allows) log:onNegativeSurface {
    _Login 
        a :Login ;
        :user _User ;
        :membership _Membership ;
        :contract _Contract . 

    _Permission 
        a :Permission ;
        :isActive true ;
        :hasMembership _Membership .

    _Permission :allows _Allows .

    _Allows 
        :contract _Contract ;
        :subscriber _User .

    () log:onNegativeSurface {
        _Login
            a :ValidPermission .
    } .
} .