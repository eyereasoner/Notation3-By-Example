@prefix : <urn:example:> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

# Inspired from https://www.jfsowa.com/ikl/iklguide.htm

# We have bill that believes something, he knows that an iranian has three planes
# or has some information about it..but doesn't know if these planes are the same
# (this is what an existential quantified \Exists: x,y,z does
:BillAndersen :believes {
    _:S a :Iranian .
    _:S :customer "Bank Melli Iran" .
    _:S :owns _:A1 , _:A2 , _:A3 .
    _:A1 a :Airplane .
    _:A2 a :Airplane .
    _:A3 a :Airplane .
} .

_:A2 :seenIn :Austria .

(_:X _:Y _:S _:A) log:onNegativeSurface {
    _:X :believes _:Y .

    # Make Bill's believe true
    _:Y log:includes {
        _:S :owns _:A 
    } .

    _:A :seenIn :Austria .

    # It could still be the case that all planes are equal
    _:A log:isomorphic _:A1 .

    () log:onNegativeSurface {
        :test :is true .
        # Here I want to say something that _:A is not equal to _:A3
    } .
} .

() log:onQuerySurface {
    :test :is true .
} .
