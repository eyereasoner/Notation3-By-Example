@prefix : <urn:example:> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

# On the positive surface we introduce a new God. Then we count how 
# many Gods there are on the implicit surface and if there is just one, 
# we know we didn't have a God on the original surface.
(skolem:x) log:onPositiveSurface {
    skolem:x a :God .

    (skolem:y skolem:Counter) log:onNegativeSurface { 

    # See: cardinality.n3
        skolem:Counter a log:GraphCounter .
        { skolem:y a :God } skolem:Counter 1.

        () log:onNegativeSurface {
            <> a :MissingGodTest .
        } .
    } .
} .

# This is a local implementation of a log:GraphCounter
:cardinalCount a log:GraphCounter .
(skolem:Graph skolem:Count skolem:List skolem:Scope) log:onNegativeSurface {
    () log:onNegativeSurface <<skolem:Graph :cardinalCount skolem:Count>> .
    ( () skolem:Graph skolem:List ) log:collectAllIn skolem:Scope .
    skolem:List list:length skolem:Count .
} .

(skolem:S skolem:O) log:onQuerySurface {
    skolem:S a skolem:O .
} .

# Test 
(skolem:x) log:onNegativeSurface {
    skolem:x a :MissingGodTest .
    () log:onNegativeSurface {
        :test :is true .
    } .
} .

() log:onQuerySurface {
    :test :is true .
} .
