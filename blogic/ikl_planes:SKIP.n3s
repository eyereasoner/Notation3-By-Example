@prefix : <urn:example:> .
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

# TPTP format
#
# fof(p3,axiom,(
#    ? [X,Y,Z] :
#      ( type(X,plane) &
#        type(Y,plane) & 
#        type(Z,plane) & 
#        id(X,1) & id(Y,2) & id(Z,3) &
#        X!=Y & X!=Z & Y!=Z 
#      )
# )).
#
# ## There is no plane with id(1) and id(2) where both are the same
# fof(test,conjecture,(
#    ? [X,Y] : ~( type(X,plane) & type(Y,plane) & id(X,1) & id(Y,2) & X=Y)
# )).
#

_A1 a :Airplane .
_A2 a :Airplane .
_A3 a :Airplane .

_A1 :id 1 .
_A2 :id 2 .
_A3 :id 3 .

_A1 owl:differentFrom _A2 .
_A1 owl:differentFrom _A3 .
_A2 owl:differentFrom _A3 .

# Comment this out..this is should blow a fuse (and it does!)
#() log:onNegativeSurface {
#    (_X _Y) log:onNegativeSurface {
#        _X a :Airplane .
#        _Y a :Airplane .
#        _X :id 1 .
#        _Y :id 2 .
#        _X owl:sameAs _Y .
#    } .
#} .

() log:onNegativeSurface {
    # So this must be true
    (_X _Y) log:onNegativeSurface {
        _X a :Airplane .
        _Y a :Airplane .
        _X :id 1 .
        _Y :id 2 .
        _X owl:sameAs _Y .
    } .
    () log:onNegativeSurface {
        :test :is true .
    }
} .

() log:onQuerySurface {
    :test :is true .
} .

# OWL

(_A _B) log:onNegativeSurface {
    _A owl:differentFrom _B .
    () log:onNegativeSurface {
        _B owl:differentFrom _A .
    } . 
} . 

(_A _B _C) log:onNegativeSurface {
    _A owl:sameAs _B .
    _A owl:differentFrom _B .
} .  

(_A _B _C _D) log:onNegativeSurface {
    _A owl:sameAs _B .
    _A _C _D .
    () log:onNegativeSurface {
        _B _C _D .
    } .
} .
    
(_A _B _C _D) log:onNegativeSurface {
    _A owl:sameAs _B .
    _C _A _D .
    () log:onNegativeSurface {
        _C _B _D .
    } .
} . 

(_A _B _C _D) log:onNegativeSurface {
    _A owl:sameAs _B .
    _D _C _A .
    () log:onNegativeSurface {
        _D _C _B .
    } .
} .

(_A _B) log:onNegativeSurface {
    _A owl:sameAs _B .
    () log:onNegativeSurface {
        _B owl:sameAs _A .
    } .
} .

(_A _B _C) log:onNegativeSurface {
    _A owl:sameAs _B .
    _B owl:sameAs _C .
    () log:onNegativeSurface {
        _A owl:sameAs _C .
    } .
} .
