@prefix : <urn:example:> .
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

# Inspired from https://www.jfsowa.com/ikl/iklguide.htm

# We have bill that believes something, he knows that an iranian has three planes
# or has some information about it..but doesn't know if these planes are the same
# (this is what an existential quantified \Exists: x,y,z does
:BillAndersen :believes {
    ?S a :Iranian .
    ?S :customer "Bank Melli Iran" .
    ?S :owns ?A1 , ?A2 , ?A3 .
    ?A1 a :Airplane .
    ?A2 a :Airplane .
    ?A3 a :Airplane .
} .

_A2 :seenIn :Austria .

(?X ?Y ?S ?A) log:onNegativeSurface {
    ?X :believes ?Y .

    # Make Bill's believe true
    ?Y log:includes {
        ?S :owns ?A 
    } .

    ?A :seenIn :Austria .

    # It could still be the case that all planes are equal
    ?A log:isomorphic ?A1 .

    () log:onNegativeSurface {
        :test :is true .
    } .
} .

() log:onQuerySurface {
    :test :is true .
} .

# sameAs: all properties of A are in B
(?A ?B ?C ?D) log:onNegativeSurface {
    ?A owl:sameAs ?B .
    ?A ?C ?D .
    () log:onNegativeSurface {
        ?B ?C ?D .
    } .
} .

# sameAs: all subjects and objects of A as property also go for B as property
(?A ?B ?C ?D) log:onNegativeSurface {
    ?A owl:sameAs ?B .
    ?C ?A ?D .
    () log:onNegativeSurface {
        ?C ?B ?D .
    } .
} . 

# sameAs: interchanging A and B as object has no effect 
(?A ?B ?C ?D) log:onNegativeSurface {
    ?A owl:sameAs ?B .
    ?D ?C ?A .
    () log:onNegativeSurface {
        ?D ?C ?B .
    } .
} .

(?A ?B) log:onNegativeSurface {
    ?A owl:sameAs ?B .
    () log:onNegativeSurface {
        ?B owl:sameAs ?A .
    } .
} .

(?A ?B ?C) log:onNegativeSurface {
    ?A owl:sameAs ?B .
    ?B owl:sameAs ?C .
    () log:onNegativeSurface {
        ?A owl:sameAs ?C .
    } .
} .