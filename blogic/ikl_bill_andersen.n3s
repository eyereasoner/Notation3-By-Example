@prefix : <urn:example:> .
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

# Inspired from https://www.jfsowa.com/ikl/iklguide.htm

# We have bill that believes something, he knows that an iranian has three planes
# or has some information about it..but doesn't know if these planes are the same
# (this is what an existential quantified \Exists: x,y,z does
:BillAndersen :believes {
    skolem:S a :Iranian .
    skolem:S :customer "Bank Melli Iran" .
    skolem:S :owns skolem:A1 , skolem:A2 , skolem:A3 .
    skolem:A1 a :Airplane .
    skolem:A2 a :Airplane .
    skolem:A3 a :Airplane .
} .

skolem:A2 :seenIn :Austria .

(skolem:X skolem:Y skolem:S skolem:A) log:onNegativeSurface {
    skolem:X :believes skolem:Y .

    # Make Bill's believe true
    skolem:Y log:includes {
        skolem:S :owns skolem:A 
    } .

    skolem:A :seenIn :Austria .

    # It could still be the case that all planes are equal
    skolem:A log:isomorphic skolem:A1 .

    () log:onNegativeSurface {
        :test :is true .
    } .
} .

() log:onQuerySurface {
    :test :is true .
} .

# sameAs: all properties of A are in B
(skolem:A skolem:B skolem:C skolem:D) log:onNegativeSurface {
    skolem:A owl:sameAs skolem:B .
    skolem:A skolem:C skolem:D .
    () log:onNegativeSurface {
        skolem:B skolem:C skolem:D .
    } .
} .

# sameAs: all subjects and objects of A as property also go for B as property
(skolem:A skolem:B skolem:C skolem:D) log:onNegativeSurface {
    skolem:A owl:sameAs skolem:B .
    skolem:C skolem:A skolem:D .
    () log:onNegativeSurface {
        skolem:C skolem:B skolem:D .
    } .
} . 

# sameAs: interchanging A and B as object has no effect 
(skolem:A skolem:B skolem:C skolem:D) log:onNegativeSurface {
    skolem:A owl:sameAs skolem:B .
    skolem:D skolem:C skolem:A .
    () log:onNegativeSurface {
        skolem:D skolem:C skolem:B .
    } .
} .

(skolem:A skolem:B) log:onNegativeSurface {
    skolem:A owl:sameAs skolem:B .
    () log:onNegativeSurface {
        skolem:B owl:sameAs skolem:A .
    } .
} .

(skolem:A skolem:B skolem:C) log:onNegativeSurface {
    skolem:A owl:sameAs skolem:B .
    skolem:B owl:sameAs skolem:C .
    () log:onNegativeSurface {
        skolem:A owl:sameAs skolem:C .
    } .
} .