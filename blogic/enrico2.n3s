@prefix : <urn:example:> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

:jozef a :father.

:franklin a :father .

#\forall x \exists y1,y2 \forall z : 
#  (x a Father) -> y1 child x & y2 pet y1 & 
#  (z pet y1 & y1 child x -> x likes z) 
(_x) log:onNegativeSurface {
    _x a :father .
    (_y1 _y2) log:onNegativeSurface {
        _y1 :child _x .
        _y2 :pet _y1.

        (_z) log:onNegativeSurface {
            _z :pet _y1 .
            _y1 :child _x .
            () log:onNegativeSurface {
                _x :likes _z .
            } .
        } .
    } .
} .

# Test
(_x _y _a _b) log:onNegativeSurface {
    _x :child :jozef .
    _y :child :franklin .

    _x log:notEqualTo _y .

    :jozef :likes _a .
    :franklin :likes _b .

    _a log:notEqualTo _b .

    () log:onNegativeSurface {
        :test :is true .
    } .
} .

# Todo add test for the pets

# Queries
(_s _o) log:onQuerySurface {
    _s a _o . 
} .

(_s _o _q) log:onQuerySurface {
    _s :pet _o . 
} .

(_s _o _q) log:onQuerySurface {
    _s :child _o . 
} .

(_s _o _q) log:onQuerySurface {
    _s :likes _o . 
} .

() log:onQuerySurface {
    :test :is true .
} .
